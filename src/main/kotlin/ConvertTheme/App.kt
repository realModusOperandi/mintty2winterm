/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package ConvertTheme

import java.io.File;
import java.io.FileReader;
import java.util.Properties

fun main(args: Array<String>) {
    when (args.size) {
        0 -> println("Specify a path to convert")
        else -> convertThemeFile(File(args[0]))
    }
}

fun convertThemeFile(file: File) {
    val themeProps = Properties()
    themeProps.load(FileReader(file))
    themeProps.setProperty("name", file.name)
    val newProps = themeProps.map() { prop -> 
        mapName(prop.key.toString()) to rgbToHex(prop.value.toString())
    }.filter() { prop -> prop.first != "\"cursorColor\""
    }.toMap().toSortedMap()
    println(newProps.toString().replace("=", " : ").replace(", ", ",\n\t").replace("{", "{\n\t").replace("}", "\n}"))
}

fun rgbToHex(rgb: String): String {
    val params = rgb.split(',')
    if (params.size < 3) {
        return "\"$rgb\""
    } 
    return "\"#" + params.map() {color: String -> 
        try {
            var n = color.toInt()
            n = maxOf(0, minOf(n, 255))
            Character.toString("0123456789ABCDEF".get((n - n % 16) / 16)) + Character.toString("0123456789ABCDEF".get(n % 16))
        } catch (e: NumberFormatException) {
            "00"
        }
    }.reduce() { acc: String, color: String -> acc + color } + "\""
}

fun mapName(name: String) = "\"" + when (name) {
    "CursorColour" -> "cursorColor"
    "name" -> "name"
    "Cyan" -> "cyan"
    "BoldWhite" -> "brightWhite"
    "Blue" -> "blue"
    "BoldCyan" -> "brightCyan"
    "BoldMagenta" -> "brightPurple"
    "BoldRed" -> "brightRed"
    "Magenta" -> "purple"
    "Black" -> "black"
    "ForegroundColour" -> "foreground"
    "Red" -> "red"
    "BackgroundColour" -> "background"
    "BoldBlue" -> "brightBlue"
    "BoldYellow" -> "brightYellow"
    "White" -> "white"
    "BoldGreen" -> "brightGreen"
    "Yellow" -> "yellow"
    "BoldBlack" -> "brightBlack"
    "Green" -> "green"
    else -> ""
} + "\""